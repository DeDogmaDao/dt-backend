name: Production build and deploy

on:
  push:
    branches: [development]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'info'

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: pull latest code
      - uses: actions/checkout@v2

      - name: build docker image
        run: |
          docker build -t ghcr.io/dedogmadao/dt-backend/backend_staging:latest .
        
      - name: push docker image to package registry
      - run: |
          docker login ghcr.io -u dedogmadao -p $GITHUB_TOKEN
      - run: |
          docker push ghcr.io/dedogmadao/dt-backend/backend_staging:latest


  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest

    steps:
      - name: Deploy package to Server
        uses: fifsky/ssh-action@master
        with:
          command: |
            export DEBUG=${{ secrets.DEBUG }}
            export SECRET_KEY=${{ secrets.SECRET_KEY }}
            export ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}
            export CORS_ORIGIN_ALLOW_ALL=${{ secrets.CORS_ORIGIN_ALLOW_ALL }}
            export CORS_ORIGIN_WHITELIST=${{ secrets.CORS_ORIGIN_WHITELIST }}
            export POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
            export POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}
            export POSTGRES_USER=${{ secrets.POSTGRES_USER}}
            export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            export POSTGRES_DB=${{ secrets.POSTGRES_DB }}
            export DBPOOL_HOST=${{ secrets.DBPOOL_HOST }}
            export DBPOOL_PORT=${{ secrets.DBPOOL_PORT }}
            curl -H "Authorization: token ${{ secrets.PERSONAL_GITHUB_TOKEN }}" https://raw.githubusercontent.com/DeDogmaDao/dt-backend/development/docker-compose.deploy.production.yml > docker-compose.deploy.yml
            docker login ghcr.io -u dedogmadao -p $GITHUB_TOKEN
            docker network create ddd_network || true
            docker volume create --name=mediafiles || true
            docker-compose -f docker-compose.deploy.yml down
            docker-compose -f docker-compose.deploy.yml up -d
          host: ${{ secrets.FRONTEND_STAGING_DEPLOY_HOST }}
          user: ${{ secrets.FRONTEND_STAGING_DEPLOY_USER }}
          key: ${{ secrets.STAGING_GITHUB_SSH_KEY}}
